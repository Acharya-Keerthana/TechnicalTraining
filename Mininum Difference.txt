class Solution {
    public int findMinDiff(ArrayList<Integer> a, int m) {
        int n = a.size();
        Collections.sort(a);

        int start = 0, end = 0;
        // Largest number of chocolates
        int mind = Integer.MAX_VALUE;

        // Find the subarray of size m such that
        // difference between last (maximum in case
        // of sorted) and first (minimum in case of
        // sorted) elements of subarray is minimum.
        for (int i = 0; i + m - 1 < n; i++) {
            int diff = a.get(i + m - 1) - a.get(i);
            if (mind > diff) {
                mind = diff;
                start = i;
                end = i + m - 1;
            }
        }
        return a.get(end) - a.get(start);
    }
}



class Solution {
    public int maxProfit(int[] prices) {
        int x=prices[0];
        int profit=0;
        for(int i=0;i<prices.length;i++){
            if(x>prices[i]){
                x=prices[i];
            }
            profit=Math.max(profit,prices[i]-x);
        }
       return profit;
    }
}
